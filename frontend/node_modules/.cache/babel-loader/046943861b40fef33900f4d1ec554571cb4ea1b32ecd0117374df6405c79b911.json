{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://127.0.0.1:8000/api'; // Replace with your actual backend API URL\n\nexport const postBlogUrl = async url => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/extract`, {\n      url\n    });\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      throw new Error('Axios error: ' + error.message);\n    }\n    throw new Error('Unknown error occurred');\n  }\n};\nexport const checkStatus = async jobId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/status/${jobId}`);\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      throw new Error('Axios error: ' + error.message);\n    }\n    throw new Error('Unknown error occurred');\n  }\n};\nexport const fetchResults = async jobId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/results/${jobId}`);\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      throw new Error('Axios error: ' + error.message);\n    }\n    throw new Error('Unknown error occurred');\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","postBlogUrl","url","response","post","data","error","isAxiosError","Error","message","checkStatus","jobId","get","fetchResults"],"sources":["C:/Users/Nikhary/autolinker/frontend/src/utils/extractor.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://127.0.0.1:8000/api'; // Replace with your actual backend API URL\n\nexport const postBlogUrl = async (url: string) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/extract`, { url });\n        return response.data;\n    } catch (error: unknown) {\n        if (axios.isAxiosError(error)) {\n            throw new Error('Axios error: ' + error.message);\n        }\n        throw new Error('Unknown error occurred');\n    }\n\n};\n\nexport const checkStatus = async (jobId: string) => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/status/${jobId}`);\n        return response.data;\n    } catch (error: unknown) {\n        if (axios.isAxiosError(error)) {\n            throw new Error('Axios error: ' + error.message);\n        }\n        throw new Error('Unknown error occurred');\n    }\n\n};\n\nexport const fetchResults = async (jobId: string) => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/results/${jobId}`);\n        return response.data;\n    } catch (error: unknown) {\n        if (axios.isAxiosError(error)) {\n            throw new Error('Axios error: ' + error.message);\n        }\n        throw new Error('Unknown error occurred');\n    }\n\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B,CAAC,CAAC;;AAElD,OAAO,MAAMC,WAAW,GAAG,MAAOC,GAAW,IAAK;EAC9C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,UAAU,EAAE;MAAEE;IAAI,CAAC,CAAC;IACrE,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAc,EAAE;IACrB,IAAIP,KAAK,CAACQ,YAAY,CAACD,KAAK,CAAC,EAAE;MAC3B,MAAM,IAAIE,KAAK,CAAC,eAAe,GAAGF,KAAK,CAACG,OAAO,CAAC;IACpD;IACA,MAAM,IAAID,KAAK,CAAC,wBAAwB,CAAC;EAC7C;AAEJ,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,MAAOC,KAAa,IAAK;EAChD,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACa,GAAG,CAAC,GAAGZ,YAAY,WAAWW,KAAK,EAAE,CAAC;IACnE,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAc,EAAE;IACrB,IAAIP,KAAK,CAACQ,YAAY,CAACD,KAAK,CAAC,EAAE;MAC3B,MAAM,IAAIE,KAAK,CAAC,eAAe,GAAGF,KAAK,CAACG,OAAO,CAAC;IACpD;IACA,MAAM,IAAID,KAAK,CAAC,wBAAwB,CAAC;EAC7C;AAEJ,CAAC;AAED,OAAO,MAAMK,YAAY,GAAG,MAAOF,KAAa,IAAK;EACjD,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACa,GAAG,CAAC,GAAGZ,YAAY,YAAYW,KAAK,EAAE,CAAC;IACpE,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAc,EAAE;IACrB,IAAIP,KAAK,CAACQ,YAAY,CAACD,KAAK,CAAC,EAAE;MAC3B,MAAM,IAAIE,KAAK,CAAC,eAAe,GAAGF,KAAK,CAACG,OAAO,CAAC;IACpD;IACA,MAAM,IAAID,KAAK,CAAC,wBAAwB,CAAC;EAC7C;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}