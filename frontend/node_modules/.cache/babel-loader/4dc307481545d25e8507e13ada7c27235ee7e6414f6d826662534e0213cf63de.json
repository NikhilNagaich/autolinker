{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikhary\\\\autolinker\\\\my-react-blog-extractor\\\\src\\\\components\\\\ProgressPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressPage = () => {\n  _s();\n  const {\n    jobId\n  } = useParams();\n  const [status, setStatus] = useState('In Progress');\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!jobId) return;\n    const interval = setInterval(async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/api/status/${jobId}`);\n        const data = await response.json();\n        if (data.status === 'completed') {\n          setStatus('Completed');\n          clearInterval(interval);\n          navigate(`/results/${jobId}`);\n        } else if (data.status === 'failed') {\n          setStatus('Failed');\n          setError('An error occurred while extracting the blog.');\n          clearInterval(interval);\n        }\n      } catch (err) {\n        setError('Error checking job status.');\n        clearInterval(interval);\n      }\n    }, 2000);\n    return () => clearInterval(interval);\n  }, [jobId, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Progress Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), status !== 'Completed' && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(ProgressPage, \"vK6qWD9kct0QK98wRpEClhiiY5c=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ProgressPage;\nexport default ProgressPage;\nvar _c;\n$RefreshReg$(_c, \"ProgressPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","CircularProgress","jsxDEV","_jsxDEV","ProgressPage","_s","jobId","status","setStatus","error","setError","navigate","interval","setInterval","response","fetch","data","json","clearInterval","err","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["C:/Users/Nikhary/autolinker/my-react-blog-extractor/src/components/ProgressPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst ProgressPage: React.FC = () => {\n    const { jobId } = useParams<{ jobId: string }>();\n    const [status, setStatus] = useState<string>('In Progress');\n    const [error, setError] = useState<string | null>(null);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (!jobId) return;\n        const interval = setInterval(async () => {\n            try {\n                const response = await fetch(`http://localhost:8000/api/status/${jobId}`);\n                const data = await response.json();\n                if (data.status === 'completed') {\n                    setStatus('Completed');\n                    clearInterval(interval);\n                    navigate(`/results/${jobId}`);\n                } else if (data.status === 'failed') {\n                    setStatus('Failed');\n                    setError('An error occurred while extracting the blog.');\n                    clearInterval(interval);\n                }\n            } catch (err) {\n                setError('Error checking job status.');\n                clearInterval(interval);\n            }\n        }, 2000);\n\n        return () => clearInterval(interval);\n    }, [jobId, navigate]);\n\n    return (\n        <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n            <h1>Progress Page</h1>\n            {status !== 'Completed' && !error && (\n                <div>\n                    <CircularProgress />\n                    <p>Status: {status}</p>\n                </div>\n            )}\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n        </div>\n    );\n};\n\nexport default ProgressPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAM,CAAC,GAAGP,SAAS,CAAoB,CAAC;EAChD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAS,aAAa,CAAC;EAC3D,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACZ,IAAI,CAACS,KAAK,EAAE;IACZ,MAAMM,QAAQ,GAAGC,WAAW,CAAC,YAAY;MACrC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoCT,KAAK,EAAE,CAAC;QACzE,MAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACT,MAAM,KAAK,WAAW,EAAE;UAC7BC,SAAS,CAAC,WAAW,CAAC;UACtBU,aAAa,CAACN,QAAQ,CAAC;UACvBD,QAAQ,CAAC,YAAYL,KAAK,EAAE,CAAC;QACjC,CAAC,MAAM,IAAIU,IAAI,CAACT,MAAM,KAAK,QAAQ,EAAE;UACjCC,SAAS,CAAC,QAAQ,CAAC;UACnBE,QAAQ,CAAC,8CAA8C,CAAC;UACxDQ,aAAa,CAACN,QAAQ,CAAC;QAC3B;MACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;QACVT,QAAQ,CAAC,4BAA4B,CAAC;QACtCQ,aAAa,CAACN,QAAQ,CAAC;MAC3B;IACJ,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMM,aAAa,CAACN,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACN,KAAK,EAAEK,QAAQ,CAAC,CAAC;EAErB,oBACIR,OAAA;IAAKiB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnDpB,OAAA;MAAAoB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBpB,MAAM,KAAK,WAAW,IAAI,CAACE,KAAK,iBAC7BN,OAAA;MAAAoB,QAAA,gBACIpB,OAAA,CAACF,gBAAgB;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpBxB,OAAA;QAAAoB,QAAA,GAAG,UAAQ,EAAChB,MAAM;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CACR,EACAlB,KAAK,iBAAIN,OAAA;MAAGiB,KAAK,EAAE;QAAEQ,KAAK,EAAE;MAAM,CAAE;MAAAL,QAAA,EAAEd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEd,CAAC;AAACtB,EAAA,CA1CID,YAAsB;EAAA,QACNL,SAAS,EAGVC,WAAW;AAAA;AAAA6B,EAAA,GAJ1BzB,YAAsB;AA4C5B,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}