{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://127.0.0.1:8000/api';// Replace with your actual backend API URL\nexport const postBlogUrl=async url=>{try{const response=await axios.post(\"\".concat(API_BASE_URL,\"/extract\"),{url});return response.data;}catch(error){if(axios.isAxiosError(error)){throw new Error('Axios error: '+error.message);}throw new Error('Unknown error occurred');}};export const checkStatus=async jobId=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/status/\").concat(jobId));return response.data;}catch(error){if(axios.isAxiosError(error)){throw new Error('Axios error: '+error.message);}throw new Error('Unknown error occurred');}};export const fetchResults=async jobId=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/results/\").concat(jobId));return response.data;}catch(error){if(axios.isAxiosError(error)){throw new Error('Axios error: '+error.message);}throw new Error('Unknown error occurred');}};","map":{"version":3,"names":["axios","API_BASE_URL","postBlogUrl","url","response","post","concat","data","error","isAxiosError","Error","message","checkStatus","jobId","get","fetchResults"],"sources":["C:/Users/Nikhary/autolinker/frontend/src/utils/extractor.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://127.0.0.1:8000/api'; // Replace with your actual backend API URL\n\nexport const postBlogUrl = async (url: string) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/extract`, { url });\n        return response.data;\n    } catch (error: unknown) {\n        if (axios.isAxiosError(error)) {\n            throw new Error('Axios error: ' + error.message);\n        }\n        throw new Error('Unknown error occurred');\n    }\n\n};\n\nexport const checkStatus = async (jobId: string) => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/status/${jobId}`);\n        return response.data;\n    } catch (error: unknown) {\n        if (axios.isAxiosError(error)) {\n            throw new Error('Axios error: ' + error.message);\n        }\n        throw new Error('Unknown error occurred');\n    }\n\n};\n\nexport const fetchResults = async (jobId: string) => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/results/${jobId}`);\n        return response.data;\n    } catch (error: unknown) {\n        if (axios.isAxiosError(error)) {\n            throw new Error('Axios error: ' + error.message);\n        }\n        throw new Error('Unknown error occurred');\n    }\n\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAG,2BAA2B,CAAE;AAElD,MAAO,MAAM,CAAAC,WAAW,CAAG,KAAO,CAAAC,GAAW,EAAK,CAC9C,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACK,IAAI,IAAAC,MAAA,CAAIL,YAAY,aAAY,CAAEE,GAAI,CAAC,CAAC,CACrE,MAAO,CAAAC,QAAQ,CAACG,IAAI,CACxB,CAAE,MAAOC,KAAc,CAAE,CACrB,GAAIR,KAAK,CAACS,YAAY,CAACD,KAAK,CAAC,CAAE,CAC3B,KAAM,IAAI,CAAAE,KAAK,CAAC,eAAe,CAAGF,KAAK,CAACG,OAAO,CAAC,CACpD,CACA,KAAM,IAAI,CAAAD,KAAK,CAAC,wBAAwB,CAAC,CAC7C,CAEJ,CAAC,CAED,MAAO,MAAM,CAAAE,WAAW,CAAG,KAAO,CAAAC,KAAa,EAAK,CAChD,GAAI,CACA,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACc,GAAG,IAAAR,MAAA,CAAIL,YAAY,aAAAK,MAAA,CAAWO,KAAK,CAAE,CAAC,CACnE,MAAO,CAAAT,QAAQ,CAACG,IAAI,CACxB,CAAE,MAAOC,KAAc,CAAE,CACrB,GAAIR,KAAK,CAACS,YAAY,CAACD,KAAK,CAAC,CAAE,CAC3B,KAAM,IAAI,CAAAE,KAAK,CAAC,eAAe,CAAGF,KAAK,CAACG,OAAO,CAAC,CACpD,CACA,KAAM,IAAI,CAAAD,KAAK,CAAC,wBAAwB,CAAC,CAC7C,CAEJ,CAAC,CAED,MAAO,MAAM,CAAAK,YAAY,CAAG,KAAO,CAAAF,KAAa,EAAK,CACjD,GAAI,CACA,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACc,GAAG,IAAAR,MAAA,CAAIL,YAAY,cAAAK,MAAA,CAAYO,KAAK,CAAE,CAAC,CACpE,MAAO,CAAAT,QAAQ,CAACG,IAAI,CACxB,CAAE,MAAOC,KAAc,CAAE,CACrB,GAAIR,KAAK,CAACS,YAAY,CAACD,KAAK,CAAC,CAAE,CAC3B,KAAM,IAAI,CAAAE,KAAK,CAAC,eAAe,CAAGF,KAAK,CAACG,OAAO,CAAC,CACpD,CACA,KAAM,IAAI,CAAAD,KAAK,CAAC,wBAAwB,CAAC,CAC7C,CAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}