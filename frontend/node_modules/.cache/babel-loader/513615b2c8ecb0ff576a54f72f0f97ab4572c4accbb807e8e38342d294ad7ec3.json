{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikhary\\\\autolinker\\\\frontend\\\\src\\\\components\\\\ResultsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchResults } from '../utils/extractor';\nimport DownloadButton from './common/DownloadButton';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ResultsPage = () => {\n  _s();\n  const {\n    jobId\n  } = useParams();\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('In Progress');\n  useEffect(() => {\n    if (!jobId) return;\n    fetchResults(jobId).then(data => {\n      setResults(data);\n      setLoading(false);\n      setStatus('Completed');\n    }).catch(err => {\n      setError('Failed to fetch results.');\n      setLoading(false);\n      setStatus('Error');\n    });\n  }, [jobId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading results...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  if (!results || !results.anchor_suggestions) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No anchor suggestions found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 57\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Progress Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), status !== 'Completed' && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }, this), status === 'Completed' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Anchor Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: results.anchor_suggestions.map((suggestion, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Anchor Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this), \" \", suggestion.anchor_text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 87\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Target Link:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: suggestion.target_link,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: suggestion.target_link\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 63\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 166\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Anchor Sentence:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this), \" \", suggestion.anchor_sentence]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DownloadButton, {\n        fileName: \"anchor_suggestions.json\",\n        data: JSON.stringify(results.anchor_suggestions, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(ResultsPage, \"BSKLNjxW/4OTNmUCmjDaJ+MB7SE=\", false, function () {\n  return [useParams];\n});\n_c = ResultsPage;\nexport default ResultsPage;\nvar _c;\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchResults","DownloadButton","CircularProgress","jsxDEV","_jsxDEV","Fragment","_Fragment","ResultsPage","_s","jobId","results","setResults","loading","setLoading","error","setError","status","setStatus","then","data","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","anchor_suggestions","map","suggestion","idx","anchor_text","href","target_link","target","rel","anchor_sentence","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/Nikhary/autolinker/frontend/src/components/ResultsPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchResults } from '../utils/extractor';\nimport DownloadButton from './common/DownloadButton';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst ResultsPage: React.FC = () => {\n    const { jobId } = useParams<{ jobId: string }>();\n    const [results, setResults] = useState<any>(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [status, setStatus] = useState<string>('In Progress');\n\n    useEffect(() => {\n        if (!jobId) return;\n        fetchResults(jobId)\n            .then(data => {\n                setResults(data);\n                setLoading(false);\n                setStatus('Completed');\n            })\n            .catch(err => {\n                setError('Failed to fetch results.');\n                setLoading(false);\n                setStatus('Error');\n            });\n    }, [jobId]);\n\n    if (loading) return <div>Loading results...</div>;\n    if (error) return <div style={{ color: 'red' }}>{error}</div>;\n    if (!results || !results.anchor_suggestions) return <div>No anchor suggestions found.</div>;\n\n    return (\n        <div>\n            <h1>Progress Page</h1>\n            {status !== 'Completed' && <CircularProgress />}\n            <p>Status: {status}</p>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            {status === 'Completed' && (\n                <>\n                    <h1>Anchor Suggestions</h1>\n                    <ul>\n                        {results.anchor_suggestions.map((suggestion: any, idx: number) => (\n                            <li key={idx}>\n                                <strong>Anchor Text:</strong> {suggestion.anchor_text}<br />\n                                <strong>Target Link:</strong> <a href={suggestion.target_link} target=\"_blank\" rel=\"noopener noreferrer\">{suggestion.target_link}</a><br />\n                                <strong>Anchor Sentence:</strong> {suggestion.anchor_sentence}\n                            </li>\n                        ))}\n                    </ul>\n                    <DownloadButton fileName=\"anchor_suggestions.json\" data={JSON.stringify(results.anchor_suggestions, null, 2)} />\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default ResultsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}