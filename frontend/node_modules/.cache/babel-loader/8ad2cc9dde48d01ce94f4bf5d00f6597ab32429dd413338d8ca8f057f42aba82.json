{"ast":null,"code":"import React from'react';import{Routes,Route}from'react-router-dom';import InputPage from'./components/InputPage';import ProgressPage from'./components/ProgressPage';import ResultsPage from'./components/ResultsPage';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{return/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(InputPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/progress/:jobId\",element:/*#__PURE__*/_jsx(ProgressPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/results/:jobId\",element:/*#__PURE__*/_jsx(ResultsPage,{})})]});};export default App;","map":{"version":3,"names":["React","Routes","Route","InputPage","ProgressPage","ResultsPage","jsx","_jsx","jsxs","_jsxs","App","children","path","element"],"sources":["C:/Users/Nikhary/autolinker/frontend/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport InputPage from './components/InputPage';\nimport ProgressPage from './components/ProgressPage';\nimport ResultsPage from './components/ResultsPage';\n\nconst App: React.FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<InputPage />} />\n      <Route path=\"/progress/:jobId\" element={<ProgressPage />} />\n      <Route path=\"/results/:jobId\" element={<ResultsPage />} />\n    </Routes>\n  );\n};\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CAChD,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,GAAa,CAAGA,CAAA,GAAM,CAC1B,mBACED,KAAA,CAACR,MAAM,EAAAU,QAAA,eACLJ,IAAA,CAACL,KAAK,EAACU,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEN,IAAA,CAACJ,SAAS,GAAE,CAAE,CAAE,CAAC,cAC1CI,IAAA,CAACL,KAAK,EAACU,IAAI,CAAC,kBAAkB,CAACC,OAAO,cAAEN,IAAA,CAACH,YAAY,GAAE,CAAE,CAAE,CAAC,cAC5DG,IAAA,CAACL,KAAK,EAACU,IAAI,CAAC,iBAAiB,CAACC,OAAO,cAAEN,IAAA,CAACF,WAAW,GAAE,CAAE,CAAE,CAAC,EACpD,CAAC,CAEb,CAAC,CAED,cAAe,CAAAK,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}