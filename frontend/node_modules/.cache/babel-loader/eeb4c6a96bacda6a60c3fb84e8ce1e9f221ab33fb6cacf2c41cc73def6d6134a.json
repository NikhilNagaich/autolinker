{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikhary\\\\autolinker\\\\my-react-blog-extractor\\\\src\\\\components\\\\ResultsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchResults } from '../utils/extractor';\nimport DownloadButton from './common/DownloadButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultsPage = () => {\n  _s();\n  var _results$blogs, _results$links;\n  const {\n    jobId\n  } = useParams();\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!jobId) return;\n    fetchResults(jobId).then(data => {\n      setResults(data);\n      setLoading(false);\n    }).catch(err => {\n      setError('Failed to fetch results.');\n      setLoading(false);\n    });\n  }, [jobId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading results...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (!results) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No results found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Extracted Blogs and Links\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: (_results$blogs = results.blogs) === null || _results$blogs === void 0 ? void 0 : _results$blogs.map((blog, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: blog.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Links\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: (_results$links = results.links) === null || _results$links === void 0 ? void 0 : _results$links.map((link, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: link\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DownloadButton, {\n      fileName: \"results.json\",\n      data: JSON.stringify(results, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(ResultsPage, \"VZwsWV3wmI2LDjlg0GheDN78iMk=\", false, function () {\n  return [useParams];\n});\n_c = ResultsPage;\nexport default ResultsPage;\nvar _c;\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchResults","DownloadButton","jsxDEV","_jsxDEV","ResultsPage","_s","_results$blogs","_results$links","jobId","results","setResults","loading","setLoading","error","setError","then","data","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","blogs","map","blog","index","title","links","link","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/Nikhary/autolinker/my-react-blog-extractor/src/components/ResultsPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchResults } from '../utils/extractor';\nimport DownloadButton from './common/DownloadButton';\n\nconst ResultsPage: React.FC = () => {\n    const { jobId } = useParams<{ jobId: string }>();\n    const [results, setResults] = useState<any>(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        if (!jobId) return;\n        fetchResults(jobId)\n            .then(data => {\n                setResults(data);\n                setLoading(false);\n            })\n            .catch(err => {\n                setError('Failed to fetch results.');\n                setLoading(false);\n            });\n    }, [jobId]);\n\n    if (loading) return <div>Loading results...</div>;\n    if (error) return <div style={{ color: 'red' }}>{error}</div>;\n    if (!results) return <div>No results found.</div>;\n\n    return (\n        <div>\n            <h1>Extracted Blogs and Links</h1>\n            <h2>Blogs</h2>\n            <ul>\n                {results.blogs?.map((blog: any, index: number) => (\n                    <li key={index}>{blog.title}</li>\n                ))}\n            </ul>\n            <h2>Links</h2>\n            <ul>\n                {results.links?.map((link: any, index: number) => (\n                    <li key={index}>{link}</li>\n                ))}\n            </ul>\n            <DownloadButton fileName=\"results.json\" data={JSON.stringify(results, null, 2)} />\n        </div>\n    );\n};\n\nexport default ResultsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}